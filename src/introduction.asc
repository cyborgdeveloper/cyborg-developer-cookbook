== Introduction

Have you ever heard about the _Bus Factor_? Or the _Lottery Factor_? According to https://en.wikipedia.org/wiki/Bus_factor[Wikipedia], the bus factor is a measurement of the risk resulting from information and capabilities not being shared among team members, from the phrase "in case they get hit by a bus". 

It's common on developer teams to hear the term _Hero Developer_. The only person that knows how to deploy the software and other stuff that is uncommon for the other developers on the team. Also, the one that can't go on vacations due to the tons of daily manual processes!

This book will help you and your entire team to get rid of those manual processes, have a stress-free project, and avoid having heroes on the team. Everyone deserves cool vacations!

TIP: You don't need to read this book following the page order. They are recipes. Get to the chapter you want to learn more about the topic and enjoy it.

=== Automate Your Tasks

In the upcoming sections, there are recipes to solve common problems related to daily tasks that developers need to do. Those are real use cases that you can learn and apply to your project.

So instead of just help you to start with technology, this book will show steps to solve real problems using the tech.

=== How to get the best of all these recipes

Some recipes will be text-only with commands to create everything from scratch. Others will need you to access a subfolder inside of this project to reach some specific files, so everything that you need to execute on the particular section makes sense and work as expected.

So first thing before trying to execute most of the commands of this project, clone the repository to your local machine.

At the beginning of each section, you will get a warning if you need or not to access a specific folder to execute commands. It will always consider that you already are on the project's root folder that you already cloned.

NOTE: Most of the commands used in this book are based on Unix/Linux environments. But, considering that most of them are to start automation on Linux environments, you only need to worry about installing some specific technologies like Docker, Vagrant, or Git and get to know how to navigate over a Windows file system to get the most from all recipes.

=== Get the base tools used in this book

This section is not focused on explaining each technology. It only shows the way you can install an configure on your local environment.

==== Git

The most famous Version Control System can be downloaded in various ways. Choose the one that fits best for you on the https://git-scm.com/downloads[download page].

==== Vagrant

Vagrant will ease all the processes of dealing with virtual machines. Choose the right distribution for you on the https://www.vagrantup.com/downloads.html[download page].

==== Docker

Docker will be our best friend on the automation journey. Maybe this is the only tool mandatory for most of the recipes in this book. Download the Desktop App or the Desktop Engine at https://hub.docker.com/search/?type=edition&offering=community[Docker Hub].
